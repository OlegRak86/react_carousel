{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","frameSize","itemWidth","step","animationDuration","infinite","caruselListwidth","useState","visibleImage","setVisibleImage","className","style","width","map","image","transform","transition","src","alt","disabled","type","onClick","framesize","length","mooweimage","moveNext","App","setFrameSize","setItemWidth","setStep","setAnimationDuration","setInfinite","htmlFor","id","min","max","value","onChange","event","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b227d62f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './Carousel.scss';\nimport { State } from '../interface';\n\nconst Carousel: React.FC<State> = ({\n  images,\n  frameSize,\n  itemWidth,\n  step,\n  animationDuration,\n  infinite,\n}:State) => {\n  const caruselListwidth = frameSize * itemWidth;\n  const [visibleImage, setVisibleImage] = useState(0);\n\n  function moveNext(framesize:number):number {\n    let mooweimage = 0;\n\n    if (framesize === step) {\n      mooweimage = visibleImage + step > images.length - step\n        ? images.length - step\n        : visibleImage + step;\n    } else {\n      mooweimage = visibleImage + step + framesize > images.length\n        ? images.length - framesize\n        : visibleImage + step;\n    }\n\n    if (visibleImage === images.length - frameSize && infinite) {\n      return 0;\n    }\n\n    return mooweimage;\n  }\n\n  function movePrev(framesize:number):number {\n    if (visibleImage === 0) {\n      return images.length - frameSize;\n    }\n\n    return visibleImage <= framesize\n      ? 0\n      : visibleImage - step;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{ width: caruselListwidth }}\n        >\n          {images.map(image => {\n            return (\n              <li\n                style={{\n                  transform: `translateX(-${itemWidth * visibleImage}px)`,\n                  transition: `${animationDuration}ms`,\n                }}\n                key={image}\n              >\n                <img\n                  src={image}\n                  style={{\n                    width: itemWidth,\n                  }}\n                  alt=\"1\"\n                />\n              </li>\n            );\n          })}\n\n        </ul>\n        <div className=\"button_container\">\n          <button\n            disabled={visibleImage <= 0 && !infinite}\n            type=\"button\"\n            onClick={() => {\n              setVisibleImage(movePrev(frameSize));\n            }}\n          >\n            Prev\n          </button>\n          <button\n            data-cy=\"next\"\n            disabled={visibleImage + frameSize === images.length && !infinite}\n            type=\"button\"\n            onClick={() => {\n              setVisibleImage(moveNext(frameSize));\n            }}\n          >\n            Next\n\n          </button>\n        </div>\n\n      </div>\n\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n// import { State } from './interface';\n\n// class App extends React.Component<{}, State> {\n//   state = {\n//     images: [\n//       './img/1.png',\n//       './img/2.png',\n//       './img/3.png',\n//       './img/4.png',\n//       './img/5.png',\n//       './img/6.png',\n//       './img/7.png',\n//       './img/8.png',\n//       './img/9.png',\n//       './img/10.png',\n//     ],\n//     frameSize: 3,\n//     itemWidth: 130,\n//     step: 3,\n//     animationDuration: 1000,\n//     infinite: false,\n//   };\n\n//   render() {\n//     const {\n//       images,\n//       frameSize,\n//       itemWidth,\n//       step,\n//       animationDuration,\n//       infinite,\n//     } = this.state;\nconst App : React.FC = () => {\n  const images = [\n    './img/1.png',\n    './img/2.png',\n    './img/3.png',\n    './img/4.png',\n    './img/5.png',\n    './img/6.png',\n    './img/7.png',\n    './img/8.png',\n    './img/9.png',\n    './img/10.png',\n  ];\n  const [frameSize, setFrameSize] = useState(3);\n  const [itemWidth, setItemWidth] = useState(130);\n  const [step, setStep] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [infinite, setInfinite] = useState(false);\n\n  return (\n    <div className=\"App\">\n\n      <Carousel\n        images={images}\n        frameSize={frameSize}\n        itemWidth={itemWidth}\n        step={step}\n        animationDuration={animationDuration}\n        infinite={infinite}\n      />\n      <div className=\"input_container\">\n        <label\n          htmlFor=\"frame\"\n        >\n          Frame Size\n          <input\n            id=\"frame\"\n            type=\"number\"\n            min={1}\n            max={10}\n            value={frameSize}\n            onChange={(event) => {\n              setFrameSize(+event.target.value);\n            }}\n          />\n        </label>\n        <label\n          htmlFor=\"width\"\n        >\n          Item Width\n          <input\n            id=\"width\"\n            type=\"number\"\n            min={130}\n            max={260}\n            step={1}\n            value={itemWidth}\n            onChange={(event) => {\n              setItemWidth(+event.target.value);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"step\"\n        >\n          Step\n          <input\n            id=\"step\"\n            type=\"number\"\n            min={1}\n            max={10}\n            step={1}\n            value={step}\n            onChange={(event) => {\n              setStep(+event.target.value);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"delay\"\n        >\n          Delay\n          <input\n            id=\"delay\"\n            type=\"number\"\n            min={1}\n            step={10}\n            value={animationDuration}\n            onChange={(event) => {\n              setAnimationDuration(+event.target.value);\n            }}\n          />\n        </label>\n\n        <label\n          htmlFor=\"infinite\"\n        >\n          Infinite\n          <input\n            type=\"checkbox\"\n            id=\"infinite\"\n            onChange={(event) => {\n              setInfinite(event.target.checked);\n            }}\n          />\n        </label>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}